캐시(Cache) 란?

캐시란 자주 사용하는 데이터를 미리 보관해둔 임시 장소를 의미한다.
캐시는 비교적 저장 공간이 적고 전체적인 비용이 비싸다.
대신 빠른 IO를 통해 성능적 이점을 가져올 수 있음

일반적으로 아래와 같은 특징들을 가지고 있는 데이터에 대해 캐시를 사용하면 좋음.
- 도중에 변경될 일이 없는 데이터베이스 조회 값
- 자주 호출되는 데이터

----------------------------------------------------------------------------

스프링 부트에서의 캐시(Cache)

스프링부트에서 사용할 수 있는 캐시는 대부분 JSR-107을 따른다.

JSR 이란
Java Specification Requests 의 줄임말로, 자바 플랫폼에 대한 규격을 제안하거나 기술한 것을 의미한다.
그중 JSR-107은 JCACHE(Java Temporary Caching API)에 관한 내용이다.

JSR-107을 따르는 캐시를 사용하면 어떤 구현체 캐시를 사용하는지에 관계없이 추상화를 지원한다.

----------------------------------------------------------------------------
로컬 캐시 vs 글로벌 캐시

로컬 캐시란?
- 로컬(해당 서버)에서만 사용하는 캐시
- 외부 서버와 트랜잭션 비용이 들지 않기 때문에 속도가 빠르다.
- 로컬에서만 사용하기 때문에 분산 서버의 구조에서 캐시를 공유하기 어렵다는 단점이 존재한다.

글로벌 캐시란?
- 여러 서버에서 접근할 수 있는 캐시 서버를 구축하여 사용하는 방식이다.
- 네트워크를 통해 데이터를 가져오는 트랜잭션 비용이 있기 때문에 로컬 캐시에 비해 상대적으로 느리다.
- 별도의 서버로 운영되기 때문에 서버 간 데이터 공유에 용이하다.

----------------------------------------------------------------------------
Redis

Remote Dictionary Server 약자로, '키-값' 구조의 데이터를 저장하고 관리하기 위한 오픈 소스 기반의 비관계형 데이터 관리 시스템

공식 사이트 : https://redis.io/

Redis 특징
1. In-memory Data Structures : 메모리를 사용하는 데이터 구조
2. Persistence : 견고하다. -> 어떠한 데이터에 대해 구조에 들어오면 데이터를 보장해준다.
3. Extensibility : 확장성에 용이하다. (접근 용이성)
4. Clustering : 클러스터를 통해 레디스 서버를 두고 동기화 용이
5. High Availability : 여러 개의 레디스 서버를 사용하면 고가용성 기능을 제공할 수 있다.
6. Programmability
----------------------------------------------------------------------------
Redis 설정 in 스프링 부트

1. pom.xml, build.gradle 에 Redis 의존성를 추가해주기 !
2. Java 에서 사용하는 Redis Client 는 크게 2가지가 있다(Jedis, Lettuce)
- 스프링 부트 2.0이후로는 기본 클라이언트로 Lettuce 가 사용된다.
3. application.properties 설정 추가해주기
4. RedisConfig 클래스 추가해주기
- Redis 접근을 위한 RedisConnectionFactory 설정 관련 정보들
5. Redis 에서 사용할 객체 설정(optional)
- Redis Repository 사용 방법 , RedisTemplate 사용하기


----------------------------------------------------------------------------

----------------------------------------------------------------------------

----------------------------------------------------------------------------
